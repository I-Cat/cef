// Copyright (c) 2020 Marshall A. Greenblatt. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//    * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//    * Neither the name of Google Inc. nor the name Chromium Embedded
// Framework nor the names of its contributors may be used to endorse
// or promote products derived from this software without specific prior
// written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool and should not edited
// by hand. See the translator.README.txt file in the tools directory for
// more information.
//
// $hash=093273b89f10cf44349273ab4e5fe1028adfaebc$
//

#ifndef CEF_INCLUDE_CAPI_CEF_POWER_POLICY_CONTROLLER_CAPI_H_
#define CEF_INCLUDE_CAPI_CEF_POWER_POLICY_CONTROLLER_CAPI_H_
#pragma once

#include "include/capi/cef_base_capi.h"

#ifdef __cplusplus
extern "C" {
#endif

///
// Implement this structure to power policy events.
///
typedef struct _cef_power_policy_controller_t {
  ///
  // Base structure.
  ///
  cef_base_ref_counted_t base;

  ///
  // Add system related wake lock.
  ///
  int(CEF_CALLBACK* add_system_wake_lock)(
      struct _cef_power_policy_controller_t* self,
      cef_wake_lock_reason_t reason,
      const cef_string_t* description);

  ///
  // Add screen related wake lock.
  ///
  int(CEF_CALLBACK* add_screen_wake_lock)(
      struct _cef_power_policy_controller_t* self,
      cef_wake_lock_reason_t reason,
      const cef_string_t* description);

  ///
  // Add screen dim related wake lock.
  ///
  int(CEF_CALLBACK* add_dim_wake_lock)(
      struct _cef_power_policy_controller_t* self,
      cef_wake_lock_reason_t reason,
      const cef_string_t* description);

  ///
  // Remove with previous functions given lock.
  ///
  void(CEF_CALLBACK* remove_wake_lock)(
      struct _cef_power_policy_controller_t* self,
      int block_id);
} cef_power_policy_controller_t;

#ifdef __cplusplus
}
#endif

#endif  // CEF_INCLUDE_CAPI_CEF_POWER_POLICY_CONTROLLER_CAPI_H_
