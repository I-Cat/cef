// Copyright (c) 2020 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//
// $hash=8d3919e08e779e44701be396ce820ad9afb8fa1f$
//

#ifndef CEF_LIBCEF_DLL_CTOCPP_POWER_POLICY_CONTROLLER_CTOCPP_H_
#define CEF_LIBCEF_DLL_CTOCPP_POWER_POLICY_CONTROLLER_CTOCPP_H_
#pragma once

#if !defined(BUILDING_CEF_SHARED)
#error This file can be included DLL-side only
#endif

#include "include/capi/cef_power_policy_controller_capi.h"
#include "include/cef_power_policy_controller.h"
#include "libcef_dll/ctocpp/ctocpp_ref_counted.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class CefPowerPolicyControllerCToCpp
    : public CefCToCppRefCounted<CefPowerPolicyControllerCToCpp,
                                 CefPowerPolicyController,
                                 cef_power_policy_controller_t> {
 public:
  CefPowerPolicyControllerCToCpp();
  virtual ~CefPowerPolicyControllerCToCpp();

  // CefPowerPolicyController methods.
  int AddSystemWakeLock(WakeLockReason reason,
                        const CefString& description) override;
  int AddScreenWakeLock(WakeLockReason reason,
                        const CefString& description) override;
  int AddDimWakeLock(WakeLockReason reason,
                     const CefString& description) override;
  void RemoveWakeLock(int block_id) override;
};

#endif  // CEF_LIBCEF_DLL_CTOCPP_POWER_POLICY_CONTROLLER_CTOCPP_H_
